<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arguments" xml:space="preserve">
    <value>_Arguments</value>
  </data>
  <data name="BytesDelta" xml:space="preserve">
    <value>Bytes Delta</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>_Cancel</value>
  </data>
  <data name="Clean" xml:space="preserve">
    <value>Clea_n Output Directory</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>_Close</value>
  </data>
  <data name="Compare" xml:space="preserve">
    <value>Compare</value>
  </data>
  <data name="CountDelta" xml:space="preserve">
    <value>Count Delta</value>
  </data>
  <data name="DatabaseSize" xml:space="preserve">
    <value>_Database Size</value>
  </data>
  <data name="DbSize" xml:space="preserve">
    <value>Database Size (MB)</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>_Enabled</value>
  </data>
  <data name="ErrorSelectProcess" xml:space="preserve">
    <value>Cannot use this process: {0}</value>
  </data>
  <data name="Executable" xml:space="preserve">
    <value>_Executable</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Stack contains</value>
  </data>
  <data name="FilterGroup" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="FirstSnapshot" xml:space="preserve">
    <value>First snapshot</value>
  </data>
  <data name="GFlags" xml:space="preserve">
    <value>GFlags</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="ImageFileExecutionOptions" xml:space="preserve">
    <value>Image File Execution Options</value>
  </data>
  <data name="ImageName" xml:space="preserve">
    <value>_Image Name</value>
  </data>
  <data name="Load" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="NewBytes" xml:space="preserve">
    <value>New Bytes</value>
  </data>
  <data name="NewCount" xml:space="preserve">
    <value>New Count</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>_Ok</value>
  </data>
  <data name="OldBytes" xml:space="preserve">
    <value>Old Bytes</value>
  </data>
  <data name="OldCount" xml:space="preserve">
    <value>Old Count</value>
  </data>
  <data name="OutputDirectory" xml:space="preserve">
    <value>_Output Directory</value>
  </data>
  <data name="Process" xml:space="preserve">
    <value>Process</value>
  </data>
  <data name="ProcessCaption" xml:space="preserve">
    <value>Process</value>
  </data>
  <data name="ProcessId" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="ProcessName" xml:space="preserve">
    <value>Process Name</value>
  </data>
  <data name="Run" xml:space="preserve">
    <value>_Run</value>
  </data>
  <data name="RunOaNoCache" xml:space="preserve">
    <value>Run with OANOCACHE</value>
  </data>
  <data name="RunOaNoCacheTitle" xml:space="preserve">
    <value>Run Process with OANOCACHE</value>
  </data>
  <data name="SecondSnapshot" xml:space="preserve">
    <value>Second snapshot</value>
  </data>
  <data name="SelectProcessTitle" xml:space="preserve">
    <value>Select Process</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SnapshotGroup" xml:space="preserve">
    <value>Snapshot</value>
  </data>
  <data name="SymbolPath" xml:space="preserve">
    <value>_Symbol Path</value>
  </data>
  <data name="Take" xml:space="preserve">
    <value>Take</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Umdh Gui</value>
  </data>
  <data name="ToolDirectory" xml:space="preserve">
    <value>_ToolDirectory</value>
  </data>
  <data name="Tools" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="TooltipFilter" xml:space="preserve">
    <value>Case insensitive substrings that have to be in the stack trace. You can separate multiple substrings with a ;</value>
  </data>
  <data name="TooltipShowSymbolPathOverrideWarning" xml:space="preserve">
    <value>This warning means that a symbol path different from the _NT_SYMBOL_PATH is used.</value>
  </data>
  <data name="TraceId" xml:space="preserve">
    <value>TraceId</value>
  </data>
  <data name="Umdh" xml:space="preserve">
    <value>Umdh</value>
  </data>
  <data name="UserModeStacktraceDatabase" xml:space="preserve">
    <value>User Mode Stacktrace Database</value>
  </data>
  <data name="UstEnabled" xml:space="preserve">
    <value>User Mode Stack 
Trace Database</value>
  </data>
  <data name="Write" xml:space="preserve">
    <value>_Write</value>
  </data>
</root>